while循环：
    while语句一般形式如：while (表达式) 语句
解释：”语句“即循环体。循环体只能是一个语句，可以是一个简单的语句，还可以是复合语句（用花括号括起来的若干语句）。
执行循环体的此数是由循环条件控制的，这个循环条件就是上面一般形式中的“表达式”，它也被称为循环条件表达式。
当此表达式的值为“真”（以非0值表示）时，就执行循环语句；为“假”时则不执行循环语句

while语句可简单记为：只要当循环条件表达式为真（即给定的条件成立），就执行循环体语句。
特点：先判断条件表达式，后执行循环体语句。

do...while循环：
    do...while语句一般形式如：
                          do
                             语句
                          while(表达式);
解释：先执行一次指定的循环体语句，然后判别表达式，当表达式的值为非0（“真”）时，返回重新执行循环体语句，如此反复，
知道表达式的值等于0（“假”）为止，此时循环结束。

do...while语句的执行过程是：先执行循环体，然后再检查条件是成立，若成立，再执行循环体。这是与while语句的不同。
特点：先无条件地执行循环体，然后判断循环条件是否成立。

for循环：
    for语句一般形式如：
                    for(表达式 1;表达式 2;表达式 3)
                        语句

for循环相较于前面两种更为灵活，不仅可以用于循环次数已经确定的情况，还可以用于循环不确定而只给出循环结束条件的情况。
3个表达式的主要作用是：
表达式 1：设置初始条件，只执行一次。可以为零个、一个或多个变量设置初值（如i=1）。
表达式 2：是循环条件表达式，用来判定是否继续循环。在每次执行循环体前先执行此表达式，决定是否继续执行循环。
表达式 3：作为循环的调整，例如使循环变量增值，它是在执行完循环体后才进行的。
最常用的for语句形式是：
                    for(循环变量赋初值；循环条件；循环变量增值)
                        语句
值得一提的是，for语句可改写为while语句，并且二者无条件等价：
for(表达式 1;表达式 2;表达式 3)   --->  表达式 1;
    语句                               while 表达式 2
                                    {
                                        语句
                                        表达式 3
                                    }
for循环独有的灵活性：
（1）表达式 1可以省略，即不设置初值，但表达式 1后面的分号不能省略：
    for(;i<=100;i++) sum=sum+i;
 由于省略了表达式 1，没有对循环变量赋初值，因此，为了正常执行循环，应在for语句之前设初值：
    i=1;
    for(;i<=100;i++) sum=sum+i;
（2）表达式 2也可以省略，不设置和检查循环的条件：
    for(i=1;;i++) sum=sum+1;
 此时循环无终止地进行下去，也就是认为表达式 2始终为真，i的值不断加大，sum的值也不断累加。
（3）表达式 3也可以省略，但此时程序设计者应另外设法保证循环能正常结束：
    for(i=1;i<=100;){
        sum=sum+i;
        i++;
    }
 i++的操作不放在表达式 3的位置，而作为循环体的一部分，效果是一样的，都能使循环正常结束。
